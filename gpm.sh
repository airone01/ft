#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

usage() {
    echo -e "${BLUE}Git Project Manager üì¶${NC}"
    echo -e "Usage:"
    echo -e "  $0 add <repo-url> <project-name> ${GREEN}# Add project to central repo${NC}"
    echo -e "  $0 submit <project-name> <target-repo-url> ${GREEN}# Submit (force push) a project to the 42 intra${NC}"
    exit 1
}

add_project() {
    REPO_URL=$1
    PROJECT_NAME=$2
    ORIGINAL_DIR=$(pwd)

    echo -e "${BLUE}üöÄ Adding project ${PROJECT_NAME}...${NC}"

    # Create temporary directory
    TEMP_DIR=$(mktemp -d)
    cd "$TEMP_DIR" || exit

    # Clone the project repo
    echo -e "${BLUE}üì• Cloning repository...${NC}"
    if ! git clone "${REPO_URL}" "${PROJECT_NAME}"; then
        echo -e "${RED}‚ùå Failed to clone repository${NC}"
        cd "$ORIGINAL_DIR" && rm -rf "$TEMP_DIR"
        exit 1
    fi

    # Get all commit messages
    cd "${PROJECT_NAME}" || exit
    COMMIT_LOG=$(git log --pretty=format:"- %s%n%b" | sed '/^$/N;/^\n$/D')
    cd "$ORIGINAL_DIR" || exit

    # Create project directory and move files
    echo -e "${BLUE}üì¶ Moving project files...${NC}"
    mkdir -p "${PROJECT_NAME}"
    cp -r "${TEMP_DIR}/${PROJECT_NAME}"/* "${PROJECT_NAME}/"

    # Clean up temp directory
    rm -rf "$TEMP_DIR"

    # Add and commit with full history in commit message
    git add "${PROJECT_NAME}"
    git commit -m "chore(gpm): add project ${PROJECT_NAME}" -m "Original commit history:" -m "$COMMIT_LOG"

    echo -e "${GREEN}‚úÖ Successfully added ${PROJECT_NAME}${NC}"
}

submit_project() {
    PROJECT_NAME=$1
    TARGET_REPO=$2
    ORIGINAL_DIR=$(pwd)

    # Check if target repo is a valid vogsphere URL
    if [[ ! "$TARGET_REPO" =~ ^git@vogsphere.42lyon.fr:vogsphere ]]; then
        echo -e "${RED}‚ùå Invalid target repository URL. Must be a vogsphere URL (git@vogsphere.42lyon.fr:vogsphere...)${NC}"
        exit 1
    fi

    echo -e "${BLUE}üì§ submiting ${PROJECT_NAME}...${NC}"

    # Create temporary directory
    TEMP_DIR=$(mktemp -d)
    cd "$TEMP_DIR" || exit

    # Initialize new repo
    git init

    # Copy latest version of files from main repo
    cp -r "${ORIGINAL_DIR}/${PROJECT_NAME}"/* .

    # Commit and force push
    git add .
    git commit -m "chore(gpm): submission of ${PROJECT_NAME}" -m "‚£á‚£ø‚†ò‚£ø‚£ø‚£ø‚°ø‚°ø‚£ü‚£ü‚¢ü‚¢ü‚¢ù‚†µ‚°ù‚£ø‚°ø‚¢Ç‚£º‚£ø‚£∑‚£å‚†©‚°´‚°ª‚£ù‚†π‚¢ø‚£ø‚£∑
‚°Ü‚£ø‚£Ü‚†±‚£ù‚°µ‚£ù‚¢Ö‚†ô‚£ø‚¢ï‚¢ï‚¢ï‚¢ï‚¢ù‚£•‚¢í‚†Ö‚£ø‚£ø‚£ø‚°ø‚£≥‚£å‚†™‚°™‚£°‚¢ë‚¢ù‚£á
‚°Ü‚£ø‚£ø‚£¶‚†π‚£≥‚£≥‚£ï‚¢Ö‚†à‚¢ó‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚¢à‚¢Ü‚†ü‚†ã‚†â‚†Å‚†â‚†â‚†Å‚†à‚†º‚¢ê‚¢ï‚¢Ω
‚°ó‚¢∞‚£∂‚£∂‚£¶‚£ù‚¢ù‚¢ï‚¢ï‚†Ö‚°Ü‚¢ï‚¢ï‚¢ï‚¢ï‚¢ï‚£¥‚†è‚£†‚°∂‚†õ‚°â‚°â‚°õ‚¢∂‚£¶‚°Ä‚†ê‚£ï‚¢ï
‚°ù‚°Ñ‚¢ª‚¢ü‚£ø‚£ø‚£∑‚£ï‚£ï‚£Ö‚£ø‚£î‚£ï‚£µ‚£µ‚£ø‚£ø‚¢†‚£ø‚¢†‚£Æ‚°à‚£å‚†®‚†Ö‚†π‚£∑‚°Ä‚¢±‚¢ï
‚°ù‚°µ‚†ü‚†à‚¢Ä‚£Ä‚£Ä‚°Ä‚†â‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£º‚£ø‚¢à‚°ã‚†¥‚¢ø‚°ü‚£°‚°á‚£ø‚°á‚°Ä‚¢ï
‚°ù‚†Å‚£†‚£æ‚†ü‚°â‚°â‚°â‚†ª‚£¶‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†∏‚£ø‚£¶‚£•‚£ø‚°á‚°ø‚£∞‚¢ó‚¢Ñ This commit was generated by Git Project Manager
‚†Å‚¢∞‚£ø‚°è‚£¥‚£å‚†à‚£å‚†°‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¨‚£â‚£â‚£Å‚£Ñ‚¢ñ‚¢ï‚¢ï‚¢ï Visit https://github.com/airone01/ft/tree
‚°Ä‚¢ª‚£ø‚°á‚¢ô‚†Å‚†¥‚¢ø‚°ü‚£°‚°Ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£µ‚£µ‚£ø
‚°ª‚£Ñ‚£ª‚£ø‚£å‚†ò‚¢ø‚£∑‚£•‚£ø‚†á‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†õ‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
‚£∑‚¢Ñ‚†ª‚£ø‚£ü‚†ø‚†¶‚†ç‚†â‚£°‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£¶‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü
‚°ï‚°ë‚£ë‚£à‚£ª‚¢ó‚¢ü‚¢û‚¢ù‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†∏‚£ø‚†ø‚†É‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚£†
‚°ù‚°µ‚°à‚¢ü‚¢ï‚¢ï‚¢ï‚¢ï‚£µ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ã‚£Ä‚£à‚†ô
‚°ù‚°µ‚°ï‚°Ä‚†ë‚†≥‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚¢â‚°†‚°≤‚°´‚°™‚°™‚°£"
    git remote add origin "${TARGET_REPO}"
    if ! git push -f origin main; then
        echo -e "${RED}‚ùå Failed to push to repository${NC}"
        cd "$ORIGINAL_DIR" && rm -rf "$TEMP_DIR"
        exit 1
    fi

    cd "$ORIGINAL_DIR" && rm -rf "$TEMP_DIR"
    echo -e "${GREEN}‚úÖ Project pushed to ${TARGET_REPO}${NC}"
}

case "$1" in
"add")
    if [ "$#" -ne 3 ]; then
        usage
    fi
    add_project "$2" "$3"
    ;;
"submit")
    if [ "$#" -ne 3 ]; then
        usage
    fi
    submit_project "$2" "$3"
    ;;
*)
    usage
    ;;
esac
